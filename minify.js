const fs = require('fs').promises
const matchURL = /https:\/\/[^.]+\.now\.sh/
const { minify } = require('html-minifier')
const Terser = require('terser')

const toKB = n => `${(n / 1000).toFixed(2)}kb`
const minifyOpts = {
  caseSensitive: false,
  collapseBooleanAttributes: true,
  collapseInlineTagWhitespace: true,
  collapseWhitespace: true,
  conservativeCollapse: true,
  decodeEntities: true,
  html5: true,
  includeAutoGeneratedTags: true,
  keepClosingSlash: false,
  maxLineLength: false,
  minifyCSS: true,
  minifyJS: js => Terser.minify(js).code,
  minifyURLs: true,
  preserveLineBreaks: false,
  preventAttributesEscaping: true,
  processConditionalComments: true,
  removeAttributeQuotes: true,
  removeComments: true,
  removeEmptyAttributes: true,
  removeEmptyElements: false,
  removeOptionalTags: true,
  removeRedundantAttributes: true,
  removeScriptTypeAttributes: true,
  removeStyleLinkTypeAttributes: true,
  removeTagWhitespace: true,
  sortAttributes: true,
  sortClassName: true,
  trimCustomFragments: true,
  useShortDoctype: true,
}

module.exports.minify = async ({
  src = 'index.template.html',
  dest = 'index.html',
  url,
  silent,
  ...opts
} = {}) => {
  const file = await fs.readFile(src, 'utf8')
  const minified = minify(file, { ...minifyOpts, ...opts })

  silent ||
    console.log(
      `${dest}:`,
      `${toKB(minified.length)}`,
      `(${toKB(file.length - minified.length)} saved)`,
    )

  const content = url ? minified.replace(matchURL, url) : minified
  return fs.writeFile(dest, content, 'utf8')
}
